{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const formState = 'feedback-form-state';\nconst form = document.querySelector('.feedback-form');\n\n// get local storage data\nconst localState = JSON.parse(localStorage.getItem(formState));\n\nif (localState) {\n    // fill form fields from local storage\n    for (const key of Object.keys(localState)) {\n        document.querySelector(`[name=\"${key}\"]`).value = localState[key];\n    }\n}\n\n// event to fill in form state object **//\nform.addEventListener('input', onInputSaveToLocalStorage);\n\n// save form form data to local storage **//\nform.addEventListener('submit', onSubmitForm);\n\nfunction onInputSaveToLocalStorage(event) {\n    const key = event.target.name;\n    const updatedStorage = {\n        ...JSON.parse(localStorage.getItem(formState)),\n        [key]: event.target.value.trim(),\n    };\n\n    localStorage.setItem(formState, JSON.stringify(updatedStorage));\n}\n\nfunction onSubmitForm(event) {\n    event.preventDefault();\n\n    const formData = new FormData(event.target);\n    const formDataObj = Object.fromEntries(formData.entries());\n    if (validateFormFields(formDataObj)) {\n        // according requirement of Homework 9\n        console.log('submit', formDataObj);\n\n        localStorage.removeItem(formState);\n\n        event.target.reset();\n    }\n}\n\nfunction validateFormFields(formDataObj) {\n    let isValid = true;\n    for (const key in formDataObj) {\n        if (!formDataObj[key]) {\n            addBorderInputError(document.querySelector(`[name=\"${key}\"]`));\n            isValid = false;\n        }\n        if (formDataObj[key]) {\n            removeBorderInputError(document.querySelector(`[name=\"${key}\"]`));\n        }\n    }\n\n    return isValid;\n}\n\nfunction addBorderInputError(input) {\n    input.classList.add('error');\n}\n\nfunction removeBorderInputError(input) {\n    input.classList.remove('error');\n}"],"names":["formState","form","localState","key","onInputSaveToLocalStorage","onSubmitForm","event","updatedStorage","formData","formDataObj","validateFormFields","isValid","addBorderInputError","removeBorderInputError","input"],"mappings":"oDAAA,MAAMA,EAAY,sBACZC,EAAO,SAAS,cAAc,gBAAgB,EAG9CC,EAAa,KAAK,MAAM,aAAa,QAAQF,CAAS,CAAC,EAE7D,GAAIE,EAEA,UAAWC,KAAO,OAAO,KAAKD,CAAU,EACpC,SAAS,cAAc,UAAUC,CAAG,IAAI,EAAE,MAAQD,EAAWC,CAAG,EAKxEF,EAAK,iBAAiB,QAASG,CAAyB,EAGxDH,EAAK,iBAAiB,SAAUI,CAAY,EAE5C,SAASD,EAA0BE,EAAO,CACtC,MAAMH,EAAMG,EAAM,OAAO,KACnBC,EAAiB,CACnB,GAAG,KAAK,MAAM,aAAa,QAAQP,CAAS,CAAC,EAC7C,CAACG,CAAG,EAAGG,EAAM,OAAO,MAAM,KAAM,CACxC,EAEI,aAAa,QAAQN,EAAW,KAAK,UAAUO,CAAc,CAAC,CAClE,CAEA,SAASF,EAAaC,EAAO,CACzBA,EAAM,eAAc,EAEpB,MAAME,EAAW,IAAI,SAASF,EAAM,MAAM,EACpCG,EAAc,OAAO,YAAYD,EAAS,QAAS,CAAA,EACrDE,EAAmBD,CAAW,IAE9B,QAAQ,IAAI,SAAUA,CAAW,EAEjC,aAAa,WAAWT,CAAS,EAEjCM,EAAM,OAAO,QAErB,CAEA,SAASI,EAAmBD,EAAa,CACrC,IAAIE,EAAU,GACd,UAAWR,KAAOM,EACTA,EAAYN,CAAG,IAChBS,EAAoB,SAAS,cAAc,UAAUT,CAAG,IAAI,CAAC,EAC7DQ,EAAU,IAEVF,EAAYN,CAAG,GACfU,EAAuB,SAAS,cAAc,UAAUV,CAAG,IAAI,CAAC,EAIxE,OAAOQ,CACX,CAEA,SAASC,EAAoBE,EAAO,CAChCA,EAAM,UAAU,IAAI,OAAO,CAC/B,CAEA,SAASD,EAAuBC,EAAO,CACnCA,EAAM,UAAU,OAAO,OAAO,CAClC"}